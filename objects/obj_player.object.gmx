<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_player1</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-5</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>self.pressed_up = false;
self.pressed_down = false;
self.pressed_jump = false;
self.pressed_right = false;
self.pressed_left = false;
self.pressed_j = false;
self.pressed_k = false;
self.pressed_space = false;
self.choice = "TBD";
self.points = 0;
self.is_host = global.is_host;
self.is_dead = false;
self.ready = false;
self.seconds = 1;
self.minutes = 1;
self.points = 0;
self.name = global.player_name;

spd = 5;

var spr_num = irandom_range(1, 4);

if (spr_num == 1) 
{
    sprite_index = spr_player1;
}
else if (spr_num == 2)
{
    sprite_index = spr_player2;
}
else if (spr_num == 3)
{
    sprite_index = spr_player3;
}
else if (spr_num == 4)
{
    sprite_index = spr_player4;
}
 
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Update server
mp_sync()
mp_addPosition("Pos", 5*room_speed);
mp_setType("Pos",mp_type.SMART);
mp_tolerance("Pos", 20);



// Add Game Maker Stuff
mp_addBuiltinBasic("basicDrawing", 15*room_speed);
mp_setType("basicDrawing", mp_type.SMART);

mp_addBuiltinBasic("basicPhysics", 15*room_speed);
mp_setType("basicPhysics", mp_type.SMART);

mp_add("playerName", "name", buffer_string, 60*room_speed);
mp_setType("playerName", mp_type.SMART);
mp_add("playerChoice", "choice", buffer_string, 60*room_speed);
mp_setType("playerChoice", mp_type.SMART);
mp_add("playerReady", "ready", buffer_bool, 60*room_speed);
mp_setType("playerReady", mp_type.SMART);

mp_add("controls", "pressed_up,pressed_down,pressed_left,pressed_right,pressed_j,pressed_k,pressed_space", buffer_bool, 1)

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>self.name = mp_map_syncOut("name", self.name);
self.pressed_up = mp_map_syncOut("pressed_up", self.pressed_up);
self.pressed_down = mp_map_syncOut("pressed_down", self.pressed_down);
self.pressed_right = mp_map_syncOut("pressed_right", self.pressed_right);
self.pressed_left = mp_map_syncOut("pressed_left", self.pressed_left);
self.pressed_j = mp_map_syncOut("pressed_j", self.pressed_j);
self.pressed_k = mp_map_syncOut("pressed_k", self.pressed_k);
self.pressed_space = mp_map_syncOut("pressed_space", self.pressed_space);
self.sprite_index = mp_map_syncOut("sprite_number", self.sprite_index);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (htme_isLocal()) {
    self.pressed_up = keyboard_check(ord('W'));
    self.pressed_down = keyboard_check(ord('S'));
    self.pressed_left = keyboard_check(ord('A'));
    self.pressed_right = keyboard_check(ord('D'));
    self.pressed_j = keyboard_check(ord('J'));
    self.pressed_k = keyboard_check(ord('K'));
    self.pressed_space = keyboard_check(vk_space);
}

mp_map_syncIn("name", self.name)
mp_map_syncIn("pressed_up", self.pressed_up)
mp_map_syncIn("pressed_down", self.pressed_down)
mp_map_syncIn("pressed_left", self.pressed_left)
mp_map_syncIn("pressed_right", self.pressed_right)
mp_map_syncIn("pressed_j", self.pressed_j)
mp_map_syncIn("pressed_k", self.pressed_k)
mp_map_syncIn("pressed_space", self.pressed_space)
mp_map_syncIn("sprite_number", self.sprite_index);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Movement

if (self.pressed_left){
    x = x - spd;
    image_speed = 0.05;
}
if (self.pressed_right) {
    x = x + spd;
    image_speed = 0.05;
}

if (keyboard_check(vk_nokey)){
    image_speed = 0.05;
}

if (room == 5) {
    if(place_free(x, y+1)){
        gravity = 0.5;
    } else {
        gravity = 0;
        vspeed = 0;
    }
    
    if (self.pressed_up &amp;&amp; place_meeting(x, y+1, obj_icy_ground_center_1)){
        vspeed -= 10;
    }
    
    if (self.pressed_up &amp;&amp; place_meeting(x, y+1, obj_icy_ground_center_14)){
        vspeed -= 10;
    }
    
    if (self.pressed_up &amp;&amp; place_meeting(x, y+1, obj_icy_ground_left_1)){
        vspeed -= 10;
    }
    
    if (self.pressed_up &amp;&amp; place_meeting(x, y+1, obj_icy_ground_left_2)){
        vspeed -= 10;
    }
    
    if (self.pressed_up &amp;&amp; place_meeting(x, y+1, obj_icy_ground_right_1)){
        vspeed -= 10;
    }
    
    if (self.pressed_up &amp;&amp; place_meeting(x, y+1, obj_icy_ground_right_2)){
        vspeed -= 10;
    }
} else {
    if (self.pressed_up) {
        y = y - spd;
        image_speed = 0.05;
    }
    
    if (self.pressed_down) {
        y = y + spd;
        image_speed = 0.05;
    } 

    // Player choice
    if (self.pressed_j) {
        self.choice = "Split";
    }

    if (self.pressed_k) {
        self.choice = "Steal";
    }
    
    if (self.pressed_space) {
        self.ready = true;
    }
}

/* Stay Inside the Room*/

if (x &gt; room_width || y &gt; room_height) {
    show_debug_message(self.name + " is off screen!");
    self.is_dead = true;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_player">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>multiplier = 1;

// x += 0.1*(x - other.x)
x += 1*(x - other.x)*multiplier
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//draw rectangle with personal score
draw_set_font(font1);
/*
draw_set_color(c_white);
str_score = "Your score is: " + string(self.points);
draw_text_ext(
424, //x
50, //y 
str_score, //str
11+(11/2), //font spacing
120 //length of each str line
);
*/

//draw self with name/status
draw_self();

draw_set_color(c_white);
draw_set_halign(fa_center);
draw_text(x,y-35,self.name);
if (room == 5) {
    // draw_text(x,y-50,self.choice);
} else {
    draw_text(x,y-50,self.choice);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
